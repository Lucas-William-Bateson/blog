---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog', ({ data }) => {
    return data.draft !== true;
  });
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<BaseLayout 
  title={entry.data.title}
  description={entry.data.description}
  type="article"
  pubDate={entry.data.pubDate}
>
  <article class="prose prose-lg max-w-none">
    <header class="mb-8 pb-8 border-b border-gray-200">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        {entry.data.title}
      </h1>
      <div class="flex items-center gap-4 text-gray-600">
        <time datetime={entry.data.pubDate.toISOString()}>
          {formatDate(entry.data.pubDate)}
        </time>
        {entry.data.updatedDate && (
          <span class="text-sm">
            (Updated: {formatDate(entry.data.updatedDate)})
          </span>
        )}
      </div>
      {entry.data.tags && entry.data.tags.length > 0 && (
        <div class="flex gap-2 flex-wrap mt-4">
          {entry.data.tags.map((tag) => (
            <span class="text-sm px-3 py-1 bg-gray-100 text-gray-700 rounded">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>
    
    <div class="text-gray-800 leading-relaxed">
      <Content />
    </div>
  </article>

  <div class="mt-12 pt-8 border-t border-gray-200">
    <a 
      href="/" 
      class="text-blue-600 hover:text-blue-800 transition-colors inline-flex items-center gap-2"
    >
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
      Back to all posts
    </a>
  </div>
</BaseLayout>

<style is:global>
  .prose {
    @apply text-gray-800;
  }
  .prose h2 {
    @apply text-2xl font-bold mt-8 mb-4 text-gray-900;
  }
  .prose h3 {
    @apply text-xl font-semibold mt-6 mb-3 text-gray-900;
  }
  .prose p {
    @apply mb-4 leading-relaxed;
  }
  .prose a {
    @apply text-blue-600 hover:text-blue-800 underline;
  }
  .prose code {
    @apply bg-gray-100 px-1.5 py-0.5 rounded text-sm font-mono text-gray-900;
  }
  .prose pre {
    @apply bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto my-6;
  }
  .prose pre code {
    @apply bg-transparent p-0 text-gray-100;
  }
  .prose ul, .prose ol {
    @apply ml-6 mb-4 space-y-2;
  }
  .prose ul {
    @apply list-disc;
  }
  .prose ol {
    @apply list-decimal;
  }
  .prose blockquote {
    @apply border-l-4 border-gray-300 pl-4 italic my-6 text-gray-700;
  }
  .prose img {
    @apply rounded-lg my-6;
  }
</style>
